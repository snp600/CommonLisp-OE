;(defparameter tree (read))
(defvar tree '(1 (10 (15 nil nil) (7 nil nil)) (5 (2 nil nil) (8 nil nil))))

(defun val (tree)
	(car tree))
(defun left (tree)
	(car (cdr tree)))
(defun right (tree)
	(car (cdr (cdr tree))))

(defun magic (tree &optional (flag 1) (res 0))
	(print (val tree))
	(incf res (val tree))
	;(when (evenp flag) (incf res (val tree)))
	(incf flag)
	(if (left tree)
		(setf res (magic(left tree) flag res)))
	(if (right tree)
		(setf res (magic(right tree) flag res)))
	res)
(print (magic tree))
